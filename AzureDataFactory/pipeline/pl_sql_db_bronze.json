{
	"name": "pl_sql_db_bronze",
	"properties": {
		"activities": [
			{
				"name": "Configs file",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_healthCare_adls_delimited",
						"type": "DatasetReference",
						"parameters": {
							"containerName": {
								"value": "@pipeline().parameters.loopkupContainerName",
								"type": "Expression"
							},
							"filePath": {
								"value": "@pipeline().parameters.loopkupFilePath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.loopkupFileName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Configs file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Configs file').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 4,
					"activities": [
						{
							"name": "File Exists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_healthCare_adls_parquet",
									"type": "DatasetReference",
									"parameters": {
										"containerName": {
											"value": "@variables('containerName')",
											"type": "Expression"
										},
										"filePath": {
											"value": "@item().targetpath",
											"type": "Expression"
										},
										"fileName": {
											"value": "@split(item().tablename, '.')[1]",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							}
						},
						{
							"name": "Already Exists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "File Exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('File Exists').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Archive File",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ParquetSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "ParquetReadSettings"
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_healthCare_adls_parquet",
												"type": "DatasetReference",
												"parameters": {
													"containerName": {
														"value": "@variables('containerName')",
														"type": "Expression"
													},
													"filePath": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"fileName": {
														"value": "@split(item().tablename, '.')[1]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_healthCare_adls_parquet",
												"type": "DatasetReference",
												"parameters": {
													"containerName": {
														"value": "@variables('containerName')",
														"type": "Expression"
													},
													"filePath": {
														"value": "@concat(item().targetpath, '/archive/', formatDateTime(utcNow(), 'yyyy'), '/', formatDateTime(utcNow(), '%M'), '/', formatDateTime(utcNow(), '%d'))",
														"type": "Expression"
													},
													"fileName": {
														"value": "@split(item().tablename, '.')[1]",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Already Exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().is_active,1)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute Load Pipeline",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "pl_full_inc_load",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"dbName": {
													"value": "@pipeline().parameters.dbName",
													"type": "Expression"
												},
												"loadtype": {
													"value": "@item().loadtype",
													"type": "Expression"
												},
												"schemaName": {
													"value": "@split(item().tablename, '.')[0]",
													"type": "Expression"
												},
												"tableName": {
													"value": "@split(item().tablename, '.')[1]",
													"type": "Expression"
												},
												"datasource": {
													"value": "@item().datasource",
													"type": "Expression"
												},
												"filePath": {
													"value": "@variables('containerName')",
													"type": "Expression"
												},
												"containerName": {
													"value": "@item().database",
													"type": "Expression"
												},
												"tableNameWithSchema": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"watermark": {
													"value": "@item().watermark",
													"type": "Expression"
												},
												"targetpath": {
													"value": "@item().targetpath",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"loopkupContainerName": {
				"type": "string",
				"defaultValue": "sqldbraw"
			},
			"loopkupFileName": {
				"type": "string",
				"defaultValue": "load_configs.csv"
			},
			"loopkupFilePath": {
				"type": "string",
				"defaultValue": "configs"
			},
			"dbName": {
				"type": "string",
				"defaultValue": "healthCare-sql-db"
			}
		},
		"variables": {
			"containerName": {
				"type": "String",
				"defaultValue": "bronze"
			}
		},
		"annotations": []
	}
}